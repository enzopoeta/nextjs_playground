import Combo from "../components/combo";
import Head from "next/head";
import dynamic from "next/dynamic";
import { useState } from "react";
import NOSSR from "react-no-ssr"; // o no-ssr e um jeito simples de forcar a renderizacao no cliente

//import Map from "../components/map";

const Map = dynamic(() => import("../components/map"), { ssr: false });
const SSR = typeof window === "undefined";

function DynamicSamplePage(props) {
  const [mapCoord, setMapCoord] = useState([-8.287, -35.035]);
  const [message, setMessage] = useState("Bem vindo ao localizador de UBSs");

  function handleSelectChange(event) {
    // if you want to support some really old IEs, add
    // event = event || window.event;

    var selectElement = event.target;

    var value = selectElement.value;
    console.log(value);

    // localizando registro selecionado
    var cnes = props.cnes.filter((reg) => reg.CNES == value);
    console.log(cnes);

    var coordinates = [
      Number(cnes[0].LATITUDE.replace(",", ".")),
      Number(cnes[0].LONGITUDE.replace(",", ".")),
    ];

    var message =
      "Nome da UBS : " +
      cnes[0].NOME +
      ", EndereÃ§o : " +
      cnes[0].LOGRADOURO +
      ", " +
      cnes[0].BAIRRO;

    setMessage(message);

    console.log(coordinates);
    setMapCoord(coordinates);
  }

  const Footer = () => {
    console.log("Is SSR? Footer -->", typeof window === "undefined");

    return <footer>Footer</footer>;
  };

  return (
    <div>
      <NOSSR>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <h1> Selecione uma UBS para ver no mapa</h1>

        <div style={{ marginBottom: "15px" }}>
          <Combo list={props.cnes} handler={handleSelectChange}></Combo>
        </div>

        <Map lat={mapCoord[0]} lon={mapCoord[1]}></Map>

        <Footer>teste</Footer>
      </NOSSR>
    </div>
  );
}

DynamicSamplePage.getInitialProps = async () => {
  return fetch("http://localhost:3000/api/ubs").then((response) =>
    response.json()
  );
};

async function dynamize() {
  DynamicSamplePage = await dynamic(() => DynamicSamplePage, { ssr: false });
}
dynamize();
export default DynamicSamplePage;
